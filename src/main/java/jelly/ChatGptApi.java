package jelly;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

/**
 * Class containing code for ChatGPTApi response generation
 */
public class ChatGptApi {

    /**
     * @param prompt Prompt to generate response with
     * @return String containing ChatGPT response
     */
    public static String chatGptResponse(String prompt) {

        String url = "https://api.openai.com/v1/chat/completions";
        String model = "gpt-3.5-turbo";
        String apiKeyEnc = "";
        String apiKey = "";
        String role = "";

        try {
            role = loadFromFile("/trivia/personality.txt");
            apiKeyEnc = loadFromFile("/trivia/keyencrypted.txt");
        } catch (IOException e) {
            System.out.println("An error occurred while loading personality!");
        }
        for (int i = apiKeyEnc.length() - 1; i >= 0; --i) {
            apiKey = apiKey + apiKeyEnc.charAt(i);
        }
        return promptResponse(apiKey, url, model, prompt, role);
    }

    private static String loadFromFile(String path) throws IOException {

        String result = "";

        InputStream stream = ChatGptApi.class.getResourceAsStream(path);

        Scanner scanner = new Scanner(stream);
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            result = result + line;
        }
        scanner.close();

        return result;
    }

    /**
     * @param apiKey apiKey used for OpenAI authentication
     * @param url URL used for OpenAI authentication
     * @param model model used for response generation
     * @param prompt prompt used for response generation
     * @param role system personality of response
     * @return Response generated by model
     */
    public static String promptResponse(String apiKey, String url, String model, String prompt, String role) {

        try {
            URL obj = new URL(url);
            HttpURLConnection connection = (HttpURLConnection) obj.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Authorization", "Bearer " + apiKey);
            connection.setRequestProperty("Content-Type", "application/json");
            String body = "{\"model\": \"" + model + "\", \"messages\": [{\"role\": \"system\", \"content\": \"" + role
                    + "\"},\n{\"role\": \"user\", \"content\": \"" + prompt + "\"}]}";
            connection.setDoOutput(true);
            OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream());
            writer.write(body);
            writer.flush();
            writer.close();
            BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String line;
            StringBuffer response = new StringBuffer();
            while ((line = br.readLine()) != null) {
                response.append(line);
            }
            br.close();
            return extractResponse(response.toString());
        } catch (IOException e) {
            System.out.println(e.getMessage());
            return "Sorry, my brain isn't working correctly cause there's no internet... What did you say?";
        }
    }

    /**
     * @param response Initial response given by ChatGPT API
     * @return Extracted response from ChatGPT
     */
    public static String extractResponse(String response) {

        int start = response.indexOf("content") + 11;

        int end = response.indexOf("\"", start);

        return response.substring(start, end);

    }
}
